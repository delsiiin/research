研究动机：联邦学习者如何在不侵犯客户隐私的情况下有效地验证客户更新的完整性？
		联邦学习（FL）使客户端能够与服务器协作来训练机器学习模型。为了确保隐私性，服务器执行来自客户端的更新的安全聚合。
	不幸的是，由于更新被屏蔽，这会阻止验证更新的良好格式（完整性）。因此，被设计来毒害模型的畸形更新可以被注入而无需检测。
		在本文中，我们形式化了确保更新隐私和完整性的问题，并提出了一个新的系统，EIFFeL，使已验证的更新的安全聚合。EIFFeL
	是一个通用框架，它可以强制执行任意的完整性检查，并从聚合中删除格式错误的更新，而不违反隐私的规定。

安全目标：
		输入隐私权（客户的目标）。第一个目标是确保所有诚实的客户的隐私。也就是说，任何一方都不应该能够了解一个诚实的客户
	端𝐶𝑖的原始输入（更新）𝑢𝑖，除了可以从最终的聚合U中了解到什么。
		输入完整性（服务器的目标）。服务器S旨在确保来自每个客户端的各个更新具有良好的格式。

模型：
		威胁模型：
			恶意服务器。我们考虑了一个恶意服务器，它可以任意偏离协议，目的是恢复用户的原始更新𝑢𝑖。
			恶意客户。我们还考虑了一套恶意客户端。恶意客户端可以任意偏离协议，目标是：(1)向服务器发送错误的输入，从而影响
		最终聚合；(2)使提交格式良好的更新的诚实客户的完整性检查失败；(3)侵犯诚实客户的隐私，可能与服务器勾结。
		
		Eiffel：
			加密构建块：算术电路、Shamir的𝑡-out-of-𝑛秘密共享方案、密钥协商、认证加密、SNIP（秘密共享的非交互式证据、区别于传统）
			系统构建块：公共验证谓词、公共公告板
创新点：
		引入客户端完整性中毒攻击的考虑
		在服务器安全聚合的基础上提出SAVI（secure aggregation with verified inputs）-- 确保用户输入的隐私和完整性
		提出Eiffel -- 一个实例化SAVI协议的系统，为证明SAVI的可行性
		在Eiffel中对SNIP协议进行完全恶意威胁模型的有效扩展
未来研究方向：
		处理更高比例的恶意用户
		处理诚实客户端的退出
		识别所有的恶意客户
		减少客户的计算
		额外的防御策略
		向多对数的复杂性
		拜占庭鲁棒聚合
		结合差分隐私
		缩放Eiffel规模，将客户端进行分组，再对每个子集运行Eiffel